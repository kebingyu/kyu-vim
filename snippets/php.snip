snippet function
abbr public function () {}
	${1:public }function ${2:#:FunctionName}(${3})
	{
		${4:TARGET}
	}

snippet function_literal
options word
abbr function () {}
	function (${1})${2: use } {
		${3:TARGET}
	}

snippet php
	<?php
	${1:TARGET}
    /* End of file ${2:filename}.php */

snippet this
	$this->

snippet class_with_constructor
    <?php

    namespace ${1};

	class ${2:#:ClassName}
	{
		${3:public }function __construct(${4})
		{
		}
	}

snippet class
options head
	class ${2:#:ClassName} {
		${0:TARGET}
	}

snippet construct
options head
	function __construct(${1})
	{
		${0:TARGET}
	}

snippet interface
    <?php

    namespace ${1};

	interface ${2}
	{
		${3:public }function ${4}(${5})
		{
		}
	}

snippet case
options head
	case '${1:#:variable}':
		${0:#:code...}
		break;

snippet switch
abbr sw
options head
	switch (${1:#:variable}) {
	case '${2:#:value}':
		${3:#:code...}
		break;
	${0}
	default:
		${4:#:code...}
		break;
	}

snippet try
options head
	try {
		${1:TARGET}
	} catch (${2:#:Exception} $e) {
		${3:#:code}
	}

snippet tryf
options head
	try {
		${1:TARGET}
	} catch (${2:#:Exception} $e) {
		${3:#:code}
	} finally {
		${4:#:code}
	}

snippet throw
options head
	throw new ${1}Exception(${2:"${3:#:Error Processing Request}"}${4:});
	${0}

snippet unit
    <?php

    namespace ${1};

    use PHPUnit_Framework_TestCase;
    use PHPUnit_Framework_MockObject_MockObject as MockObject;

    class ${2}Test extends PHPUnit_Framework_TestCase
    {
        use TestHelpers;

        /** @var  */
        protected $;

        /** @var  | MockObject */
        protected $;

        public function setUp()
        {
            ${3}
        }
    }
